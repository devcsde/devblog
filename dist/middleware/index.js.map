{"version":3,"sources":["../../middleware/index.js"],"names":["Blog","require","Comment","middlewareObj","checkBlogOwnership","req","res","next","isAuthenticated","findById","params","id","err","blog","redirect","user","author","equals","_id","admin","console","log","checkCommentOwnership","cid","comment","isLoggedIn","isAdmin","module","exports"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,gBAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,mBAAR,CAAhB;;AAEA;;AAEA,IAAIE,gBAAgB,EAApB;;AAEAA,cAAcC,kBAAd,GAAmC,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrD,MAAIF,IAAIG,eAAJ,EAAJ,EAA0B;AACxBR,SAAKS,QAAL,CAAcJ,IAAIK,MAAJ,CAAWC,EAAzB,EAA6B,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC1C,UAAID,GAAJ,EAAQ;AACNN,YAAIQ,QAAJ,CAAa,MAAb;AACD,OAFD,MAEO;AACL;AACA,YAAIT,IAAIU,IAAJ,KAAaF,KAAKG,MAAL,CAAYL,EAAZ,CAAeM,MAAf,CAAsBZ,IAAIU,IAAJ,CAASG,GAA/B,KAAuCb,IAAIU,IAAJ,CAASI,KAA7D,CAAJ,EAAwE;AACtEZ;AACD,SAFD,MAEO;AACLa,kBAAQC,GAAR,CAAY,uCAAZ;AACAf,cAAIQ,QAAJ;AACD;AACF;AACF,KAZD;AAaD,GAdD,MAcO;AACLM,YAAQC,GAAR,CAAY,mCAAZ;AACAf,QAAIQ,QAAJ;AACD;AACF,CAnBD;;AAqBAX,cAAcmB,qBAAd,GAAsC,UAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxD,MAAIF,IAAIG,eAAJ,EAAJ,EAA0B;AACxBN,YAAQO,QAAR,CAAiBJ,IAAIK,MAAJ,CAAWa,GAA5B,EAAiC,UAACX,GAAD,EAAMY,OAAN,EAAkB;AACjD,UAAIZ,GAAJ,EAAQ;AACNN,YAAIQ,QAAJ,CAAa,MAAb;AACD,OAFD,MAEO;AACL;AACA,YAAIT,IAAIU,IAAJ,KAAaS,QAAQR,MAAR,CAAeL,EAAf,CAAkBM,MAAlB,CAAyBZ,IAAIU,IAAJ,CAASG,GAAlC,KAA0Cb,IAAIU,IAAJ,CAASI,KAAhE,CAAJ,EAA2E;AACzEZ;AACD,SAFD,MAEO;AACLa,kBAAQC,GAAR,CAAY,uCAAZ;AACAf,cAAIQ,QAAJ;AACD;AACF;AACF,KAZD;AAaD,GAdD,MAcO;AACLM,YAAQC,GAAR,CAAY,mCAAZ;AACAf,QAAIQ,QAAJ;AACD;AACF,CAnBD;;AAqBAX,cAAcsB,UAAd,GAA2B,UAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7C,MAAIF,IAAIG,eAAJ,EAAJ,EAA2B;AACzB,WAAOD,MAAP;AACD;AACDD,MAAIQ,QAAJ,CAAa,QAAb;AACD,CALD;;AAOAX,cAAcuB,OAAd,GAAwB,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAIF,IAAIU,IAAJ,CAASI,KAAT,KAAmB,IAAvB,EAA6B;AAC3B,WAAOZ,MAAP;AACD;AACDD,MAAIQ,QAAJ,CAAa,QAAb;AACD,CALD;;AAOAa,OAAOC,OAAP,GAAiBzB,aAAjB","file":"index.js","sourcesContent":["const Blog = require(\"../models/blog\");\nconst Comment = require(\"../models/comment\");\n\n// all middleware\n\nlet middlewareObj = {};\n\nmiddlewareObj.checkBlogOwnership = (req, res, next) => {\n  if (req.isAuthenticated()){\n    Blog.findById(req.params.id, (err, blog) => {\n      if (err){\n        res.redirect(\"back\");\n      } else {\n        // mongoose method .equals can compare the string with object_id from DB\n        if (req.user && (blog.author.id.equals(req.user._id) || req.user.admin)){\n          next();\n        } else {\n          console.log(\"You are not the owner of this content\");\n          res.redirect(`back`);\n        }\n      }\n    });\n  } else {\n    console.log(\"You need to be logged in to do it\");\n    res.redirect(`back`);\n  }\n};\n\nmiddlewareObj.checkCommentOwnership = (req, res, next) => {\n  if (req.isAuthenticated()){\n    Comment.findById(req.params.cid, (err, comment) => {\n      if (err){\n        res.redirect(\"back\");\n      } else {\n        // mongoose method .equals can compare the req.params string  with object_id from DB\n        if (req.user && (comment.author.id.equals(req.user._id) || req.user.admin)){\n          next();\n        } else {\n          console.log(\"You are not the owner of this content\");\n          res.redirect(`back`);\n        }\n      }\n    });\n  } else {\n    console.log(\"You need to be logged in to do it\");\n    res.redirect(`back`);\n  }\n};\n\nmiddlewareObj.isLoggedIn = (req, res, next) => {\n  if (req.isAuthenticated()) {\n    return next();\n  }\n  res.redirect(\"/login\");\n};\n\nmiddlewareObj.isAdmin = (req, res, next) => {\n  if (req.user.admin === true) {\n    return next();\n  }\n  res.redirect(\"/blogs\");\n};\n\nmodule.exports = middlewareObj;"]}