{"version":3,"sources":["../../routes/blogs.js"],"names":["express","require","router","Router","Blog","middleware","get","req","res","find","sort","created","blogs","render","post","isLoggedIn","body","description","sanitize","newBlog","author","id","user","_id","username","create","blog","redirect","params","length","findById","populate","exec","checkBlogOwnership","console","log","put","findByIdAndUpdate","delete","findByIdAndRemove","module","exports"],"mappings":"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","file":"blogs.js","sourcesContent":["const express = require(\"express\");\nconst router = express.Router();\n\nconst Blog = require(\"../models/blog\");\nconst middleware = require(\"../middleware\");\n\n// show all items\nrouter.get(\"/\", async (req, res) => {\n  try {\n    const blogs = await Blog.find({}).sort({created: -1});\n    res.render(\"blogs/index\", {blogs});\n  } catch (err) {\n    throw `Cannot get data from db, ${err}`\n  }\n});\n\n// create new item\nrouter.post(\"/\", middleware.isLoggedIn, async (req, res) => {\n  try {\n    req.body.post.description = req.sanitize(req.body.post.description);\n    let newBlog = req.body.post;\n    newBlog.author = {\n      id: req.user._id,\n      username: req.user.username\n    };\n    const blog = await Blog.create(newBlog);\n    res.redirect(`blogs/${blog._id}`);\n\n  } catch (err) {\n    throw `Could not create document, ${err}`;\n  }\n});\n\n// show form to create new item\nrouter.get(\"/new\", middleware.isLoggedIn, (req, res) => {\n  res.render('blogs/new');\n});\n\n// show a single item\nrouter.get(\"/:id\", async (req, res) => {\n  try {\n    if (req.params.id.length < 24 ){\n      return res.render(\"404\");\n    }\n    const blog = await Blog.findById(req.params.id).populate(\"comments\").exec();\n    res.render(\"blogs/show\", {blog});\n  } catch (err) {\n    throw `Could not find document, ${err}`;\n  }\n});\n\n// EDIT ROUTE\nrouter.get(\"/:id/edit\", middleware.checkBlogOwnership, async (req, res) => {\n  try {\n      const blog = await Blog.findById(req.params.id);\n      res.render(\"blogs/edit\", {blog});\n  } catch (e) {\n    console.log(e);\n    res.redirect(`back`);\n  }\n});\n\n// UPDATE blog\nrouter.put(\"/:id\", middleware.checkBlogOwnership, async (req, res) => {\n  try {\n    req.body.post.description = req.sanitize(req.body.post.description);\n    await Blog.findByIdAndUpdate(req.params.id, req.body.post);\n    res.redirect(`/blogs/${req.params.id}`);\n  } catch (e) {\n    console.log(e);\n    res.redirect(\"/blogs\");\n  }\n});\n\n// DESTROY blog ROUTE\nrouter.delete(\"/:id\", middleware.checkBlogOwnership, async (req, res) => {\n  try {\n    await Blog.findByIdAndRemove(req.params.id);\n    res.redirect(\"/blogs\");\n  } catch (e) {\n    console.log(e);\n    res.redirect(\"/blogs\");\n  }\n});\n\nmodule.exports = router;"]}