{"version":3,"sources":["../../routes/comments.js"],"names":["express","require","router","Router","mergeParams","Blog","Comment","middleware","get","isLoggedIn","req","res","findById","params","id","blog","render","post","body","comment","text","sanitize","create","author","user","_id","username","save","comments","push","redirect","console","log","checkCommentOwnership","cid","blogId","put","findByIdAndUpdate","delete","findByIdAndRemove","module","exports"],"mappings":"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","file":"comments.js","sourcesContent":["const express = require(\"express\");\nconst router = express.Router({mergeParams: true});\nconst Blog = require(\"../models/blog\");\nconst Comment = require(\"../models/comment\");\nconst middleware = require(\"../middleware\");\n\n\n// COMMENTS ROUTES\n// show the add comment form\nrouter.get(\"/new\", middleware.isLoggedIn, async (req, res) => {\n  try {\n    const blog = await Blog.findById(req.params.id);\n    res.render(\"comments/new\", {blog});\n  } catch (e) {\n    throw e;\n  }\n});\n\n// add the new comment\nrouter.post(\"/\", middleware.isLoggedIn, async (req, res) => {\n  try {\n    req.body.comment.text = req.sanitize(req.body.comment.text);\n    const blog = await Blog.findById(req.params.id);\n    const comment = await Comment.create(req.body.comment);\n    // add username and id to comment\n    comment.author.id = req.user._id;\n    comment.author.username = req.user.username;\n    // save comment\n    comment.save();\n    await blog.comments.push(comment);\n    blog.save();\n    res.redirect(`/blogs/${blog._id}`);\n\n  } catch (e) {\n    console.log(`There was an error, ${e}`);\n    res.redirect(\"/blogs\");\n  }\n});\n\n// SHOW UPDATE / EDIT COMMENT ROUTE\nrouter.get(\"/:cid/edit\", middleware.checkCommentOwnership, async (req, res) => {\n  try {\n    const comment = await Comment.findById(req.params.cid);\n    const blogId = req.params.id;\n    res.render(\"comments/edit\", {comment, blogId})\n  } catch (e) {\n    res.redirect(`/blogs/${req.params.id}`);\n    throw e;\n  }\n});\n\n// UPDATE / EDIT COMMENT\nrouter.put(\"/:cid\", middleware.checkCommentOwnership, async (req, res) => {\n  try {\n    req.body.comment.text = req.sanitize(req.body.comment.text);\n    await Comment.findByIdAndUpdate(req.params.cid, req.body.comment);\n    res.redirect(`/blogs/${req.params.id}`);\n  } catch (e) {\n    throw e;\n  }\n});\n\n// DESTROY COMMENT\nrouter.delete(\"/:cid\", middleware.checkCommentOwnership, async (req, res) => {\n  try {\n    await Comment.findByIdAndRemove(req.params.cid);\n    res.redirect(`/blogs/${req.params.id}`);\n  } catch (e) {\n    console.log(e);\n    res.redirect(`/blogs/${req.params.id}`);\n  }\n});\n\nmodule.exports = router;"]}